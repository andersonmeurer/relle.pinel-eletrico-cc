   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"buffer.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.buffer_Init,"ax",%progbits
  19              		.align	1
  20              		.global	buffer_Init
  21              		.thumb
  22              		.thumb_func
  24              	buffer_Init:
  25              	.LFB0:
  26              		.file 1 "uc_libc_dev/misc/buffer.c"
   1:uc_libc_dev/misc/buffer.c **** #include "buffer.h"
   2:uc_libc_dev/misc/buffer.c **** 
   3:uc_libc_dev/misc/buffer.c **** //-------------------------------------------------------------------------------------------------
   4:uc_libc_dev/misc/buffer.c **** // Descrição: 	Incializa o buffer com a posição de memória apontada pelo vetor
   5:uc_libc_dev/misc/buffer.c **** // Parametros: 	Endereço da estrutura do buffer, endereço do vetor de dados e o tamanho do vetor
   6:uc_libc_dev/misc/buffer.c **** // Retorna: 	Nada
   7:uc_libc_dev/misc/buffer.c **** //-------------------------------------------------------------------------------------------------
   8:uc_libc_dev/misc/buffer.c **** void buffer_Init(buffer_t *buffer, u8 *start, u16 size) {
  27              		.loc 1 8 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.LVL0:
   9:uc_libc_dev/misc/buffer.c **** 	// set start pointer of the buffer
  10:uc_libc_dev/misc/buffer.c **** 	buffer->dataptr = start;
  11:uc_libc_dev/misc/buffer.c **** 	buffer->size = size;
  12:uc_libc_dev/misc/buffer.c **** 	// initialize index and length
  13:uc_libc_dev/misc/buffer.c **** 	buffer->dataindex = 0;
  33              		.loc 1 13 0
  34 0000 0023     		movs	r3, #0
  10:uc_libc_dev/misc/buffer.c **** 	buffer->dataptr = start;
  35              		.loc 1 10 0
  36 0002 0160     		str	r1, [r0, #0]
  11:uc_libc_dev/misc/buffer.c **** 	buffer->size = size;
  37              		.loc 1 11 0
  38 0004 8280     		strh	r2, [r0, #4]	@ movhi
  39              		.loc 1 13 0
  40 0006 0381     		strh	r3, [r0, #8]	@ movhi
  14:uc_libc_dev/misc/buffer.c **** 	buffer->datalength = 0;
  41              		.loc 1 14 0
  42 0008 C380     		strh	r3, [r0, #6]	@ movhi
  43 000a 7047     		bx	lr
  44              		.cfi_endproc
  45              	.LFE0:
  47              		.section	.text.buffer_GetFromFront,"ax",%progbits
  48              		.align	1
  49              		.global	buffer_GetFromFront
  50              		.thumb
  51              		.thumb_func
  53              	buffer_GetFromFront:
  54              	.LFB1:
  15:uc_libc_dev/misc/buffer.c **** }
  16:uc_libc_dev/misc/buffer.c **** 
  17:uc_libc_dev/misc/buffer.c **** //-------------------------------------------------------------------------------------------------
  18:uc_libc_dev/misc/buffer.c **** // Descrição: 	Retorna com o primeiro caractere do buffer e retira-o do buffer
  19:uc_libc_dev/misc/buffer.c **** // Parametros: 	Ponteiro da estrutura do buffer
  20:uc_libc_dev/misc/buffer.c **** // Retorna: 	Primeiro caractere do buffer
  21:uc_libc_dev/misc/buffer.c **** //-------------------------------------------------------------------------------------------------
  22:uc_libc_dev/misc/buffer.c **** u8 buffer_GetFromFront(buffer_t *buffer) {
  55              		.loc 1 22 0
  56              		.cfi_startproc
  57              		@ args = 0, pretend = 0, frame = 0
  58              		@ frame_needed = 0, uses_anonymous_args = 0
  59              	.LVL1:
  60 0000 0346     		mov	r3, r0
  23:uc_libc_dev/misc/buffer.c **** 	u8 data = 0;
  24:uc_libc_dev/misc/buffer.c **** 	
  25:uc_libc_dev/misc/buffer.c **** 	// check to see if there's data in the buffer
  26:uc_libc_dev/misc/buffer.c **** 	if(buffer->datalength) {
  61              		.loc 1 26 0
  62 0002 C088     		ldrh	r0, [r0, #6]
  63              	.LVL2:
  22:uc_libc_dev/misc/buffer.c **** u8 buffer_GetFromFront(buffer_t *buffer) {
  64              		.loc 1 22 0
  65 0004 10B5     		push	{r4, lr}
  66              	.LCFI0:
  67              		.cfi_def_cfa_offset 8
  68              		.cfi_offset 4, -8
  69              		.cfi_offset 14, -4
  70              		.loc 1 26 0
  71 0006 80B2     		uxth	r0, r0
  72 0008 D8B1     		cbz	r0, .L3
  27:uc_libc_dev/misc/buffer.c **** 		// get the first character from buffer
  28:uc_libc_dev/misc/buffer.c **** 		data = buffer->dataptr[buffer->dataindex];
  73              		.loc 1 28 0
  74 000a 1968     		ldr	r1, [r3, #0]
  75 000c 1A89     		ldrh	r2, [r3, #8]
  76 000e 92B2     		uxth	r2, r2
  77 0010 885C     		ldrb	r0, [r1, r2]	@ zero_extendqisi2
  78              	.LVL3:
  29:uc_libc_dev/misc/buffer.c **** 		// move index down and decrement length
  30:uc_libc_dev/misc/buffer.c **** 		buffer->dataindex++;
  79              		.loc 1 30 0
  80 0012 1A89     		ldrh	r2, [r3, #8]
  81              	.LVL4:
  82 0014 0132     		adds	r2, r2, #1
  83 0016 92B2     		uxth	r2, r2
  84 0018 1A81     		strh	r2, [r3, #8]	@ movhi
  31:uc_libc_dev/misc/buffer.c **** 		if(buffer->dataindex >= buffer->size) {
  85              		.loc 1 31 0
  86 001a 1989     		ldrh	r1, [r3, #8]
  87 001c 9A88     		ldrh	r2, [r3, #4]
  88 001e 89B2     		uxth	r1, r1
  89 0020 92B2     		uxth	r2, r2
  90 0022 9142     		cmp	r1, r2
  91 0024 09D3     		bcc	.L4
  32:uc_libc_dev/misc/buffer.c **** 			buffer->dataindex %= buffer->size;
  92              		.loc 1 32 0
  93 0026 1989     		ldrh	r1, [r3, #8]
  94 0028 9A88     		ldrh	r2, [r3, #4]
  95 002a 89B2     		uxth	r1, r1
  96 002c 92B2     		uxth	r2, r2
  97 002e B1FBF2F4 		udiv	r4, r1, r2
  98 0032 02FB1412 		mls	r2, r2, r4, r1
  99 0036 92B2     		uxth	r2, r2
 100 0038 1A81     		strh	r2, [r3, #8]	@ movhi
 101              	.L4:
  33:uc_libc_dev/misc/buffer.c **** 		}
  34:uc_libc_dev/misc/buffer.c **** 		buffer->datalength--;
 102              		.loc 1 34 0
 103 003a DA88     		ldrh	r2, [r3, #6]
 104 003c 013A     		subs	r2, r2, #1
 105 003e 92B2     		uxth	r2, r2
 106 0040 DA80     		strh	r2, [r3, #6]	@ movhi
 107              	.LVL5:
 108              	.L3:
  35:uc_libc_dev/misc/buffer.c **** 	}
  36:uc_libc_dev/misc/buffer.c **** 	
  37:uc_libc_dev/misc/buffer.c **** 	return data;
  38:uc_libc_dev/misc/buffer.c **** }
 109              		.loc 1 38 0
 110 0042 10BD     		pop	{r4, pc}
 111              		.cfi_endproc
 112              	.LFE1:
 114              		.section	.text.buffer_DumpFromFront,"ax",%progbits
 115              		.align	1
 116              		.global	buffer_DumpFromFront
 117              		.thumb
 118              		.thumb_func
 120              	buffer_DumpFromFront:
 121              	.LFB2:
  39:uc_libc_dev/misc/buffer.c **** 
  40:uc_libc_dev/misc/buffer.c **** //-------------------------------------------------------------------------------------------------
  41:uc_libc_dev/misc/buffer.c **** // Descrição: 	Elimina do buffer N bytes
  42:uc_libc_dev/misc/buffer.c **** // Parametros: 	Ponteiro para estrutura do buffer e quantidades de bytes
  43:uc_libc_dev/misc/buffer.c **** // Retorna: 	Nada
  44:uc_libc_dev/misc/buffer.c **** //-------------------------------------------------------------------------------------------------
  45:uc_libc_dev/misc/buffer.c **** void buffer_DumpFromFront(buffer_t* buffer, u16 numbytes) {
 122              		.loc 1 45 0
 123              		.cfi_startproc
 124              		@ args = 0, pretend = 0, frame = 0
 125              		@ frame_needed = 0, uses_anonymous_args = 0
 126              	.LVL6:
  46:uc_libc_dev/misc/buffer.c **** 	// dump numbytes from the front of the buffer
  47:uc_libc_dev/misc/buffer.c **** 	// are we dumping less than the entire buffer?
  48:uc_libc_dev/misc/buffer.c **** 	if(numbytes < buffer->datalength) {
 127              		.loc 1 48 0
 128 0000 C388     		ldrh	r3, [r0, #6]
  45:uc_libc_dev/misc/buffer.c **** void buffer_DumpFromFront(buffer_t* buffer, u16 numbytes) {
 129              		.loc 1 45 0
 130 0002 10B5     		push	{r4, lr}
 131              	.LCFI1:
 132              		.cfi_def_cfa_offset 8
 133              		.cfi_offset 4, -8
 134              		.cfi_offset 14, -4
 135              		.loc 1 48 0
 136 0004 9BB2     		uxth	r3, r3
 137 0006 9942     		cmp	r1, r3
 138 0008 18D2     		bcs	.L7
  49:uc_libc_dev/misc/buffer.c **** 		// move index down by numbytes and decrement length by numbytes
  50:uc_libc_dev/misc/buffer.c **** 		buffer->dataindex += numbytes;
 139              		.loc 1 50 0
 140 000a 0389     		ldrh	r3, [r0, #8]
 141 000c CB18     		adds	r3, r1, r3
 142 000e 9BB2     		uxth	r3, r3
 143 0010 0381     		strh	r3, [r0, #8]	@ movhi
  51:uc_libc_dev/misc/buffer.c **** 		if(buffer->dataindex >= buffer->size) {
 144              		.loc 1 51 0
 145 0012 0289     		ldrh	r2, [r0, #8]
 146 0014 8388     		ldrh	r3, [r0, #4]
 147 0016 92B2     		uxth	r2, r2
 148 0018 9BB2     		uxth	r3, r3
 149 001a 9A42     		cmp	r2, r3
 150 001c 09D3     		bcc	.L8
  52:uc_libc_dev/misc/buffer.c **** 			buffer->dataindex %= buffer->size;
 151              		.loc 1 52 0
 152 001e 0289     		ldrh	r2, [r0, #8]
 153 0020 8388     		ldrh	r3, [r0, #4]
 154 0022 92B2     		uxth	r2, r2
 155 0024 9BB2     		uxth	r3, r3
 156 0026 B2FBF3F4 		udiv	r4, r2, r3
 157 002a 03FB1423 		mls	r3, r3, r4, r2
 158 002e 9BB2     		uxth	r3, r3
 159 0030 0381     		strh	r3, [r0, #8]	@ movhi
 160              	.L8:
  53:uc_libc_dev/misc/buffer.c **** 		}
  54:uc_libc_dev/misc/buffer.c **** 		buffer->datalength -= numbytes;
 161              		.loc 1 54 0
 162 0032 C388     		ldrh	r3, [r0, #6]
 163 0034 591A     		subs	r1, r3, r1
 164              	.LVL7:
 165 0036 89B2     		uxth	r1, r1
 166 0038 C180     		strh	r1, [r0, #6]	@ movhi
 167 003a 10BD     		pop	{r4, pc}
 168              	.LVL8:
 169              	.L7:
  55:uc_libc_dev/misc/buffer.c **** 	} else {
  56:uc_libc_dev/misc/buffer.c **** 		// flush the whole buffer
  57:uc_libc_dev/misc/buffer.c **** 		buffer->datalength = 0;
 170              		.loc 1 57 0
 171 003c 0023     		movs	r3, #0
 172 003e C380     		strh	r3, [r0, #6]	@ movhi
 173 0040 10BD     		pop	{r4, pc}
 174              		.cfi_endproc
 175              	.LFE2:
 177              		.section	.text.buffer_GetAtIndex,"ax",%progbits
 178              		.align	1
 179              		.global	buffer_GetAtIndex
 180              		.thumb
 181              		.thumb_func
 183              	buffer_GetAtIndex:
 184              	.LFB3:
  58:uc_libc_dev/misc/buffer.c **** 	}
  59:uc_libc_dev/misc/buffer.c **** }
  60:uc_libc_dev/misc/buffer.c **** 
  61:uc_libc_dev/misc/buffer.c **** //-------------------------------------------------------------------------------------------------
  62:uc_libc_dev/misc/buffer.c **** // Descrição: 	Retorna o caractere apontado pelo indece
  63:uc_libc_dev/misc/buffer.c **** // Parametros:	Ponteiro para estrutura do buffer e o indice do dado
  64:uc_libc_dev/misc/buffer.c **** // Retorna: 	O caractere apontado pelo indece
  65:uc_libc_dev/misc/buffer.c **** //-------------------------------------------------------------------------------------------------
  66:uc_libc_dev/misc/buffer.c **** u8 buffer_GetAtIndex(buffer_t* buffer, u16 index) {
 185              		.loc 1 66 0
 186              		.cfi_startproc
 187              		@ args = 0, pretend = 0, frame = 0
 188              		@ frame_needed = 0, uses_anonymous_args = 0
 189              	.LVL9:
  67:uc_libc_dev/misc/buffer.c **** 	// return character at index in buffer
  68:uc_libc_dev/misc/buffer.c **** 	return buffer->dataptr[(buffer->dataindex+index)%(buffer->size)];
 190              		.loc 1 68 0
 191 0000 0268     		ldr	r2, [r0, #0]
  66:uc_libc_dev/misc/buffer.c **** u8 buffer_GetAtIndex(buffer_t* buffer, u16 index) {
 192              		.loc 1 66 0
 193 0002 10B5     		push	{r4, lr}
 194              	.LCFI2:
 195              		.cfi_def_cfa_offset 8
 196              		.cfi_offset 4, -8
 197              		.cfi_offset 14, -4
 198              		.loc 1 68 0
 199 0004 0489     		ldrh	r4, [r0, #8]
 200 0006 8388     		ldrh	r3, [r0, #4]
 201 0008 A4B2     		uxth	r4, r4
 202 000a 6118     		adds	r1, r4, r1
 203              	.LVL10:
 204 000c 9BB2     		uxth	r3, r3
 205 000e 91FBF3F0 		sdiv	r0, r1, r3
 206              	.LVL11:
 207 0012 03FB1013 		mls	r3, r3, r0, r1
  69:uc_libc_dev/misc/buffer.c **** }
 208              		.loc 1 69 0
 209 0016 D05C     		ldrb	r0, [r2, r3]	@ zero_extendqisi2
 210 0018 10BD     		pop	{r4, pc}
 211              		.cfi_endproc
 212              	.LFE3:
 214              		.section	.text.buffer_AddToEnd,"ax",%progbits
 215              		.align	1
 216              		.global	buffer_AddToEnd
 217              		.thumb
 218              		.thumb_func
 220              	buffer_AddToEnd:
 221              	.LFB4:
  70:uc_libc_dev/misc/buffer.c **** 
  71:uc_libc_dev/misc/buffer.c **** //-------------------------------------------------------------------------------------------------
  72:uc_libc_dev/misc/buffer.c **** // Descrição: 	Adiciona o caractere no fim do buffer
  73:uc_libc_dev/misc/buffer.c **** // Parametros: 	Ponteiro para estrutura do buffer e o dados a ser gravados
  74:uc_libc_dev/misc/buffer.c **** // Retorna: 	pdPASS se o dados for gravado com sucesso ou erro de acesso
  75:uc_libc_dev/misc/buffer.c **** //-------------------------------------------------------------------------------------------------
  76:uc_libc_dev/misc/buffer.c **** int buffer_AddToEnd(buffer_t* buffer, u8 data) {
 222              		.loc 1 76 0
 223              		.cfi_startproc
 224              		@ args = 0, pretend = 0, frame = 0
 225              		@ frame_needed = 0, uses_anonymous_args = 0
 226              	.LVL12:
  77:uc_libc_dev/misc/buffer.c **** 	// make sure the buffer has room
  78:uc_libc_dev/misc/buffer.c **** 	if(buffer->datalength < buffer->size) {
 227              		.loc 1 78 0
 228 0000 C288     		ldrh	r2, [r0, #6]
 229 0002 8388     		ldrh	r3, [r0, #4]
 230 0004 92B2     		uxth	r2, r2
 231 0006 9BB2     		uxth	r3, r3
 232 0008 9A42     		cmp	r2, r3
  76:uc_libc_dev/misc/buffer.c **** int buffer_AddToEnd(buffer_t* buffer, u8 data) {
 233              		.loc 1 76 0
 234 000a 30B5     		push	{r4, r5, lr}
 235              	.LCFI3:
 236              		.cfi_def_cfa_offset 12
 237              		.cfi_offset 4, -12
 238              		.cfi_offset 5, -8
 239              		.cfi_offset 14, -4
 240              		.loc 1 78 0
 241 000c 12D2     		bcs	.L13
  79:uc_libc_dev/misc/buffer.c **** 		// save data byte at end of buffer
  80:uc_libc_dev/misc/buffer.c **** 		buffer->dataptr[(buffer->dataindex + buffer->datalength) % buffer->size] = data;
 242              		.loc 1 80 0
 243 000e 0468     		ldr	r4, [r0, #0]
 244 0010 0589     		ldrh	r5, [r0, #8]
 245 0012 C288     		ldrh	r2, [r0, #6]
 246 0014 8388     		ldrh	r3, [r0, #4]
 247 0016 ADB2     		uxth	r5, r5
 248 0018 92B2     		uxth	r2, r2
 249 001a AA18     		adds	r2, r5, r2
 250 001c 9BB2     		uxth	r3, r3
 251 001e 92FBF3F5 		sdiv	r5, r2, r3
 252 0022 03FB1523 		mls	r3, r3, r5, r2
 253 0026 E154     		strb	r1, [r4, r3]
  81:uc_libc_dev/misc/buffer.c **** 		// increment the length
  82:uc_libc_dev/misc/buffer.c **** 		buffer->datalength++;
 254              		.loc 1 82 0
 255 0028 C388     		ldrh	r3, [r0, #6]
 256 002a 0133     		adds	r3, r3, #1
 257 002c 9BB2     		uxth	r3, r3
 258 002e C380     		strh	r3, [r0, #6]	@ movhi
  83:uc_libc_dev/misc/buffer.c **** 		// return success
  84:uc_libc_dev/misc/buffer.c **** 		return pdPASS;
 259              		.loc 1 84 0
 260 0030 0120     		movs	r0, #1
 261              	.LVL13:
 262 0032 30BD     		pop	{r4, r5, pc}
 263              	.LVL14:
 264              	.L13:
  85:uc_libc_dev/misc/buffer.c **** 	} else 
  86:uc_libc_dev/misc/buffer.c **** 		return errBUFFER_FULL;
 265              		.loc 1 86 0
 266 0034 6FF00900 		mvn	r0, #9
 267              	.LVL15:
  87:uc_libc_dev/misc/buffer.c **** }
 268              		.loc 1 87 0
 269 0038 30BD     		pop	{r4, r5, pc}
 270              		.cfi_endproc
 271              	.LFE4:
 273              		.section	.text.buffer_IsNotFull,"ax",%progbits
 274              		.align	1
 275              		.global	buffer_IsNotFull
 276              		.thumb
 277              		.thumb_func
 279              	buffer_IsNotFull:
 280              	.LFB5:
  88:uc_libc_dev/misc/buffer.c **** 
  89:uc_libc_dev/misc/buffer.c **** //-------------------------------------------------------------------------------------------------
  90:uc_libc_dev/misc/buffer.c **** // Descrição: 	Verifica se o buffer esta cheio
  91:uc_libc_dev/misc/buffer.c **** // Parametros: 	Ponteiro para estrutura do buffer
  92:uc_libc_dev/misc/buffer.c **** // Retorna: 	Retorna pdTRUE se o buffer não está cheio
  93:uc_libc_dev/misc/buffer.c **** //-------------------------------------------------------------------------------------------------
  94:uc_libc_dev/misc/buffer.c **** int buffer_IsNotFull(buffer_t* buffer) {
 281              		.loc 1 94 0
 282              		.cfi_startproc
 283              		@ args = 0, pretend = 0, frame = 0
 284              		@ frame_needed = 0, uses_anonymous_args = 0
 285              		@ link register save eliminated.
 286              	.LVL16:
  95:uc_libc_dev/misc/buffer.c **** 	// check to see if the buffer has room
  96:uc_libc_dev/misc/buffer.c **** 	// return true if there is room
  97:uc_libc_dev/misc/buffer.c **** 	if (buffer->datalength < buffer->size)
 287              		.loc 1 97 0
 288 0000 C288     		ldrh	r2, [r0, #6]
 289 0002 8388     		ldrh	r3, [r0, #4]
 290 0004 92B2     		uxth	r2, r2
 291 0006 98B2     		uxth	r0, r3
 292              	.LVL17:
  98:uc_libc_dev/misc/buffer.c **** 		return pdTRUE;
  99:uc_libc_dev/misc/buffer.c **** 	else
 100:uc_libc_dev/misc/buffer.c **** 		return pdFALSE;
 101:uc_libc_dev/misc/buffer.c **** }
 293              		.loc 1 101 0
 294 0008 8242     		cmp	r2, r0
 295 000a 2CBF     		ite	cs
 296 000c 0020     		movcs	r0, #0
 297 000e 0120     		movcc	r0, #1
 298 0010 7047     		bx	lr
 299              		.cfi_endproc
 300              	.LFE5:
 302              		.section	.text.buffer_IsEmpty,"ax",%progbits
 303              		.align	1
 304              		.global	buffer_IsEmpty
 305              		.thumb
 306              		.thumb_func
 308              	buffer_IsEmpty:
 309              	.LFB6:
 102:uc_libc_dev/misc/buffer.c **** 
 103:uc_libc_dev/misc/buffer.c **** //-------------------------------------------------------------------------------------------------
 104:uc_libc_dev/misc/buffer.c **** // Descrição: 	Verifica se o buffer esta vazio
 105:uc_libc_dev/misc/buffer.c **** // Parametros: 	Ponteiro para estrutura do buffer
 106:uc_libc_dev/misc/buffer.c **** // Retorna: 	Retorna pdTRUE se o buffer está vazio
 107:uc_libc_dev/misc/buffer.c **** //-------------------------------------------------------------------------------------------------
 108:uc_libc_dev/misc/buffer.c **** int buffer_IsEmpty(buffer_t *buffer) {
 310              		.loc 1 108 0
 311              		.cfi_startproc
 312              		@ args = 0, pretend = 0, frame = 0
 313              		@ frame_needed = 0, uses_anonymous_args = 0
 314              		@ link register save eliminated.
 315              	.LVL18:
 109:uc_libc_dev/misc/buffer.c **** 	if (buffer->datalength == 0)
 316              		.loc 1 109 0
 317 0000 C088     		ldrh	r0, [r0, #6]
 318              	.LVL19:
 319 0002 80B2     		uxth	r0, r0
 110:uc_libc_dev/misc/buffer.c **** 		return pdTRUE;
 111:uc_libc_dev/misc/buffer.c **** 	else
 112:uc_libc_dev/misc/buffer.c **** 		return pdFALSE;
 113:uc_libc_dev/misc/buffer.c **** }
 320              		.loc 1 113 0
 321 0004 D0F10100 		rsbs	r0, r0, #1
 322 0008 38BF     		it	cc
 323 000a 0020     		movcc	r0, #0
 324 000c 7047     		bx	lr
 325              		.cfi_endproc
 326              	.LFE6:
 328              		.section	.text.buffer_Clear,"ax",%progbits
 329              		.align	1
 330              		.global	buffer_Clear
 331              		.thumb
 332              		.thumb_func
 334              	buffer_Clear:
 335              	.LFB7:
 114:uc_libc_dev/misc/buffer.c **** 
 115:uc_libc_dev/misc/buffer.c **** //-------------------------------------------------------------------------------------------------
 116:uc_libc_dev/misc/buffer.c **** // Descrição: 	Limpa o buffer de recepção
 117:uc_libc_dev/misc/buffer.c **** // Parametros: 	Ponteiro para estrutura do buffer
 118:uc_libc_dev/misc/buffer.c **** // Retorna: 	Nada
 119:uc_libc_dev/misc/buffer.c **** //-------------------------------------------------------------------------------------------------
 120:uc_libc_dev/misc/buffer.c **** void buffer_Clear(buffer_t* buffer) {
 336              		.loc 1 120 0
 337              		.cfi_startproc
 338              		@ args = 0, pretend = 0, frame = 0
 339              		@ frame_needed = 0, uses_anonymous_args = 0
 340              		@ link register save eliminated.
 341              	.LVL20:
 121:uc_libc_dev/misc/buffer.c **** 	buffer->datalength = 0;
 342              		.loc 1 121 0
 343 0000 0023     		movs	r3, #0
 344 0002 C380     		strh	r3, [r0, #6]	@ movhi
 345 0004 7047     		bx	lr
 346              		.cfi_endproc
 347              	.LFE7:
 349              		.text
 350              	.Letext0:
 351              		.file 2 "uc_libc_dev/_libdef/uc_libdefs.h"
 352              		.file 3 "uc_libc_dev/misc/buffer.h"
DEFINED SYMBOLS
                            *ABS*:00000000 buffer.c
C:\Users\alex\AppData\Local\Temp\ccPjlrrZ.s:19     .text.buffer_Init:00000000 $t
C:\Users\alex\AppData\Local\Temp\ccPjlrrZ.s:24     .text.buffer_Init:00000000 buffer_Init
C:\Users\alex\AppData\Local\Temp\ccPjlrrZ.s:48     .text.buffer_GetFromFront:00000000 $t
C:\Users\alex\AppData\Local\Temp\ccPjlrrZ.s:53     .text.buffer_GetFromFront:00000000 buffer_GetFromFront
C:\Users\alex\AppData\Local\Temp\ccPjlrrZ.s:115    .text.buffer_DumpFromFront:00000000 $t
C:\Users\alex\AppData\Local\Temp\ccPjlrrZ.s:120    .text.buffer_DumpFromFront:00000000 buffer_DumpFromFront
C:\Users\alex\AppData\Local\Temp\ccPjlrrZ.s:178    .text.buffer_GetAtIndex:00000000 $t
C:\Users\alex\AppData\Local\Temp\ccPjlrrZ.s:183    .text.buffer_GetAtIndex:00000000 buffer_GetAtIndex
C:\Users\alex\AppData\Local\Temp\ccPjlrrZ.s:215    .text.buffer_AddToEnd:00000000 $t
C:\Users\alex\AppData\Local\Temp\ccPjlrrZ.s:220    .text.buffer_AddToEnd:00000000 buffer_AddToEnd
C:\Users\alex\AppData\Local\Temp\ccPjlrrZ.s:274    .text.buffer_IsNotFull:00000000 $t
C:\Users\alex\AppData\Local\Temp\ccPjlrrZ.s:279    .text.buffer_IsNotFull:00000000 buffer_IsNotFull
C:\Users\alex\AppData\Local\Temp\ccPjlrrZ.s:303    .text.buffer_IsEmpty:00000000 $t
C:\Users\alex\AppData\Local\Temp\ccPjlrrZ.s:308    .text.buffer_IsEmpty:00000000 buffer_IsEmpty
C:\Users\alex\AppData\Local\Temp\ccPjlrrZ.s:329    .text.buffer_Clear:00000000 $t
C:\Users\alex\AppData\Local\Temp\ccPjlrrZ.s:334    .text.buffer_Clear:00000000 buffer_Clear
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
