#ifndef __LCD_FONTS_5X4_H
#define __LCD_FONTS_5X4_H


//static unsigned char __attribute__ ((progmem)) lcd_fonts[] = { // Com esta declaracao estas constantes são armazenadas na ROM e não copiadas para RAM
static const u8 lcd_fonts[] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	// (space)		
	0x00, 0x00, 0x04, 0x04, 0x04, 0x00, 0x04,	// !			
	0x00, 0x00, 0x0A, 0x0A, 0x00, 0x00, 0x00, 	// "			
	0x00, 0x00, 0x0A, 0x1F, 0x0A, 0x1F, 0x0A, 	// #			
	0x04, 0x0F, 0x14, 0x0E, 0x05, 0x1E, 0x04,	// $			
	0x00, 0x00, 0x11, 0x02, 0x04, 0x08, 0x11,	// %			
	0x08, 0x14, 0x14, 0x09, 0x15, 0x12, 0x0D,	// & 			
	0x00, 0x00, 0x06, 0x08, 0x10, 0x08, 0x06,	// {  Excessao	
	0x00, 0x00, 0x04, 0x08, 0x08, 0x08, 0x04,	// ( 			
	0x00, 0x00, 0x10, 0x08, 0x08, 0x08, 0x10,	// ) 			
	0x00, 0x00, 0x15, 0x0E, 0x1F, 0x0E, 0x15,	// * 			
	0x00, 0x00, 0x04, 0x04, 0x1F, 0x04, 0x04,	// + 			
	0x00, 0x00, 0x00, 0x00, 0x18, 0x08, 0x10,	// , 			
	0x00, 0x00, 0x00, 0x00, 0x1F, 0x00, 0x00,	// - 			
	0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x18,	// . 			
	0x00, 0x00, 0x01, 0x02, 0x04, 0x08, 0x10,	// / 			
	0x00, 0x00,	0x0E, 0x13, 0x15, 0x19, 0x0E,	// 0 			
	0x00, 0x00, 0x04, 0x0C, 0x04, 0x04, 0x0E, 	// 1 			
	0x00, 0x00, 0x1E, 0x01, 0x1F, 0x10, 0x1F, 	// 2 			
	0x00, 0x00, 0x1E, 0x01, 0x0F, 0x01, 0x1E, 	// 3 			
	0x00, 0x00, 0x11, 0x11, 0x1F, 0x01, 0x01, 	// 4 			
	0x00, 0x00,	0x0F, 0x10, 0x1F, 0x01, 0x1F, 	// 5 			
	0x00, 0x00,	0x10, 0x10, 0x1F, 0x11, 0x1F, 	// 6 			 
	0x00, 0x00,	0x1F, 0x01, 0x01, 0x01, 0x01,	// 7  			
	0x00, 0x00,	0x0E, 0x11, 0x1F, 0x11, 0x0E, 	// 8  			
	0x00, 0x00,	0x1F, 0x11, 0x1F, 0x01, 0x01,	// 9  			
	0x00, 0x00, 0x00, 0x08, 0x00, 0x08, 0x00,	// : 			
	0x00, 0x00, 0x00, 0x08, 0x00, 0x08, 0x10,	// ; 			
	0x00, 0x00, 0x02, 0x04, 0x08, 0x04, 0x02,	// < 			
	0x00, 0x00, 0x00, 0x1F, 0x00, 0x1F, 0x00,	// = 			
	0x00, 0x00, 0x10, 0x08, 0x04, 0x08, 0x10,	// > 			
	0x00, 0x00, 0x0F, 0x09, 0x02, 0x00, 0x02,	// ? 			
	0x00, 0x00, 0x0E, 0x15, 0x17, 0x10, 0x0E,	// @ 			
	0x00, 0x00,	0x0E, 0x11, 0x1F, 0x11, 0x11, 	// A  			
	0x00, 0x00,	0x1E, 0x11, 0x1E, 0x11, 0x1E,  	// B  			
	0x00, 0x00,	0x0F, 0x10, 0x10, 0x10, 0x0F,  	// C  			
	0x00, 0x00,	0x1E, 0x11, 0x11, 0x11, 0x1E, 	// D  			
	0x00, 0x00,	0x1F, 0x10, 0x1E, 0x10, 0x1F, 	// E  			
	0x00, 0x00,	0x1F, 0x10, 0x1E, 0x10, 0x10, 	// F  			
	0x00, 0x00,	0x0F, 0x10, 0x17, 0x11, 0x0F, 	// G  			
	0x00, 0x00,	0x11, 0x11, 0x1F, 0x11, 0x11, 	// H  			
	0x00, 0x00,	0x0E, 0x04, 0x04, 0x04, 0x0E, 	// I  			
	0x00, 0x00,	0x01, 0x01, 0x11, 0x11, 0x1F, 	// J  			
	0x00, 0x00,	0x11, 0x12, 0x1C, 0x12, 0x11, 	// K 
	0x00, 0x00,	0x10, 0x10, 0x10, 0x10, 0x1F, 	// L 
	0x00, 0x00,	0x11, 0x1B, 0x15, 0x11, 0x11, 	// M 
	0x00, 0x00,	0x11, 0x19, 0x15, 0x13, 0x11, 	// N 
	0x00, 0x00,	0x0E, 0x11, 0x11, 0x11, 0x0E, 	// O 
	0x00, 0x00,	0x1F, 0x11, 0x1F, 0x10, 0x10, 	// P 
	0x00, 0x00,	0x0E, 0x11, 0x15, 0x12, 0x0D, 	// Q 
	0x00, 0x00,	0x1E, 0x11, 0x1E, 0x11, 0x11, 	// R 
	0x00, 0x00,	0x0F, 0x10, 0x0E, 0x01, 0x1E, 	// S 
	0x00, 0x00,	0x1F, 0x04, 0x04, 0x04, 0x04, 	// T 
	0x00, 0x00,	0x11, 0x11, 0x11, 0x11, 0x0E, 	// U 
	0x00, 0x00,	0x11, 0x11, 0x11, 0x0A, 0x04, 	// V 
	0x00, 0x00,	0x11, 0x11, 0x15, 0x1B, 0x11, 	// W 
	0x00, 0x00,	0x11, 0x0A, 0x04, 0x0A, 0x11, 	// X 
	0x00, 0x00,	0x11, 0x11, 0x0A, 0x04, 0x04, 	// Y 
	0x00, 0x00,	0x1F, 0x02, 0x04, 0x08, 0x1F, 	// Z 
	0x00, 0x00, 0x1C, 0x10, 0x10, 0x10, 0x1C,	// [  			59
	0x00, 0x00, 0x10, 0x08, 0x04, 0x02, 0x00,	// "\"  		60	
	0x00, 0x00, 0x1C, 0x04, 0x04, 0x04, 0x1C,	// ]   			61
	0x00, 0x00, 0x18, 0x04, 0x02, 0x04, 0x18,	// } Excessao  	62		
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F,	// _  			63
	
	0x08, 0x04, 0x0E, 0x11, 0x1F, 0x11, 0x11, 	// À
	0x02, 0x04, 0x0E, 0x11, 0x1F, 0x11, 0x11, 	// Á
	0x04, 0x0A, 0x0E, 0x11, 0x1F, 0x11, 0x11, 	// Â
	0x05, 0x0A, 0x0E, 0x11, 0x1F, 0x11, 0x11, 	// Ã
	0x0A, 0x00, 0x0E, 0x11, 0x1F, 0x11, 0x11, 	// Ä
	0x04, 0x0E, 0x0E, 0x11, 0x1F, 0x11, 0x11, 	// A com bolinha em cima
	0x00, 0x00, 0x1F, 0x14, 0x1E, 0x14, 0x1F, 	// AE
	0x00, 0x00, 0x1F, 0x10, 0x10, 0x1F, 0x04,	// Ç
	0x08, 0x04, 0x1F, 0x10, 0x1E, 0x10, 0x1F,	// È
	0x02, 0x04, 0x1F, 0x10, 0x1E, 0x10, 0x1F,	// É
	0x04, 0x0A, 0x1F, 0x10, 0x1E, 0x10, 0x1F,	// Ê
	0x0A, 0x00, 0x1F, 0x10, 0x1E, 0x10, 0x1F,	// Ë
	0x08, 0x04, 0x0E, 0x04, 0x04, 0x04, 0x0E,	// Ì
	0x02, 0x04, 0x0E, 0x04, 0x04, 0x04, 0x0E,	// Í
	0x04, 0x0A, 0x0E, 0x04, 0x04, 0x04, 0x0E,	// Î
	0x0A, 0x00, 0x0E, 0x04, 0x04, 0x04, 0x0E,	// Ï
	0x00, 0x00, 0x1E, 0x11, 0x3D, 0x11, 0x1E,	// D cortado
	0x05, 0x0A, 0x11, 0x19, 0x15, 0x13, 0x11,	// Ñ
	0x08, 0x04, 0x0E, 0x11, 0x11, 0x11, 0x0E,	// Ò
	0x02, 0x04, 0x0E, 0x11, 0x11, 0x11, 0x0E,	// Ó
	0x04, 0x0A, 0x0E, 0x11, 0x11, 0x11, 0x0E,	// Ô
	0x05, 0x0A, 0x0E, 0x11, 0x11, 0x11, 0x0E,	// Õ
	0x0A, 0x00, 0x0E, 0x11, 0x11, 0x11, 0x0E,	// Ö
	0x00, 0x00, 0x12, 0x0C, 0x0C, 0x12, 0x00,	// x diferente
	0x00, 0x00, 0x1F, 0x13, 0x15, 0x19, 0x1F,	// 0 diferente
	0x08, 0x04, 0x11, 0x11, 0x11, 0x11, 0x0E,	// Ù
	0x02, 0x04, 0x11, 0x11, 0x11, 0x11, 0x0E,	// Ú
	0x04, 0x0A, 0x11, 0x11, 0x11, 0x11, 0x0E,	// Û
	0x0A, 0x00, 0x11, 0x11, 0x11, 0x11, 0x0E,	// Ü
	0x02, 0x04, 0x11, 0x11, 0x0E, 0x04, 0x04	// Ý
};

#endif
